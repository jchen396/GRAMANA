"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/PlayScreen.tsx":
/*!***********************************!*\
  !*** ./components/PlayScreen.tsx ***!
  \***********************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! @swc/helpers/src/_define_property.mjs */ \"./node_modules/@swc/helpers/src/_define_property.mjs\");\n/* harmony import */ var _swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! @swc/helpers/src/_object_spread.mjs */ \"./node_modules/@swc/helpers/src/_object_spread.mjs\");\n/* harmony import */ var _swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @swc/helpers/src/_object_spread_props.mjs */ \"./node_modules/@swc/helpers/src/_object_spread_props.mjs\");\n/* harmony import */ var _swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @swc/helpers/src/_to_consumable_array.mjs */ \"./node_modules/@swc/helpers/src/_to_consumable_array.mjs\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"./node_modules/react/jsx-dev-runtime.js\");\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"./node_modules/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _Socket__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./Socket */ \"./components/Socket.tsx\");\n\n\n\n\nvar _this = undefined;\n\n\n\nvar _s = $RefreshSig$();\nvar AVAILABLE_LETTERS = \"PURPLE\".split(\"\");\nvar PlayScreen = function() {\n    var _this1 = _this;\n    _s();\n    var initialArr = [];\n    // For loops will generate an array of empty strings\n    for(var i = 0; i < 100; i++){\n        initialArr.push(\"\");\n    }\n    var ref = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initialArr), tiles = ref[0], setTiles = ref[1];\n    var ref1 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(-1), selectedIndex = ref1[0], setSelectedIndex = ref1[1];\n    var ref2 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false), isWin = ref2[0], setIsWin = ref2[1];\n    var ref3 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(\"red\"), playerColor = ref3[0], setPlayerColor = ref3[1];\n    var ref4 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)({}), boardColor = ref4[0], setBoardColor = ref4[1];\n    var ref5 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null), selectedDiv = ref5[0], setSelectedDiv = ref5[1];\n    var ref6 = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(0), turn = ref6[0], setTurn = ref6[1];\n    var refs = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(new Array(100)).map(function() {\n        return /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().createRef();\n    }));\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        _Socket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].on(\"connect\", function() {\n            return console.log(_Socket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].id);\n        });\n        _Socket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].on(\"play\", function(grid, board, color) {\n            setTiles(grid);\n            grid.forEach(function(key, value) {\n                if (key in board) {\n                    console.log(board[key]);\n                    if (board[key] == \"red\") {\n                        refs.current[key].current.classList.add(\"bg-red-400\");\n                    } else {\n                        refs.current[key].current.classList.add(\"bg-blue-400\");\n                    }\n                } else {\n                //refs.current[key]?.current.classList.remove(`bg-blue-400`);\n                //refs.current[key]?.current.classList.remove(`bg-red-400`);\n                }\n            });\n            if (color === \"red\") {\n                setPlayerColor(\"blue\");\n            } else {\n                setPlayerColor(\"red\");\n            }\n        });\n        return function() {\n            _Socket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].off(\"connect\");\n            _Socket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].off(\"play\");\n        };\n    }, []);\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        // CHECK LEFT TO RIGHT\n        var checkLeftRight = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex + i]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex - i1] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex - i1]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        //CHECK RIGHT TO LEFT\n        var checkRightLeft = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex - i] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex - i]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex + i1] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex + i1]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        var checkUpDown = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex + i * 10] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex + i * 10]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex - i1 * 10] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex - i1 * 10]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        var checkDownUp = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex - i * 10] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex - i * 10]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex + i1 * 10] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex + i1 * 10]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        var checkUpRight = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex - i * 9] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex - i * 9]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex + i1 * 9] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex + i1 * 9]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        var checkUpLeft = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex - i * 11] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex - i * 11]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex + i1 * 11] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex + i1 * 11]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        var checkDownLeft = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex + i * 9] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex + i * 9]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex - i1 * 9] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex - i1 * 9]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        var checkDownRight = function() {\n            if (isWin === false) {\n                var rightCharacters = AVAILABLE_LETTERS.length - 1 - AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var leftCharacters = AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]);\n                var rightCheck = false;\n                var leftCheck = false;\n                if (rightCharacters === 0) rightCheck = true;\n                for(var i = 1; i < rightCharacters + 1; i++){\n                    //check right side of AVAILABLE_LETTERS array\n                    if (rightCharacters === 0) rightCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) + i] === tiles[selectedIndex + i * 11] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) + i] === tiles[selectedIndex + i * 11]) {\n                        if (i === rightCharacters) {\n                            rightCheck = true;\n                        }\n                        continue;\n                    } else break;\n                    rightCheck = true;\n                }\n                if (leftCharacters === 0) leftCheck = true;\n                for(var i1 = 1; i1 < leftCharacters + 1; i1++){\n                    //check left side of AVAILABLE_LETTERS array\n                    if (leftCharacters === 0) leftCheck = true;\n                    if (AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex]) - i1] === tiles[selectedIndex - i1 * 11] || AVAILABLE_LETTERS[AVAILABLE_LETTERS.indexOf(tiles[selectedIndex], 2) - i1] === tiles[selectedIndex - i1 * 11]) {\n                        if (i1 === leftCharacters || leftCharacters === 0) {\n                            leftCheck = true;\n                        }\n                        continue;\n                    } else break;\n                }\n                if (rightCheck && leftCheck) {\n                    setIsWin(true);\n                }\n            }\n        };\n        checkLeftRight();\n        checkRightLeft();\n        checkUpDown();\n        checkDownUp();\n        checkUpRight();\n        checkUpLeft();\n        checkDownLeft();\n        checkDownRight();\n        //check game status\n        if (isWin) {\n            console.log(\"\".concat(playerColor, \" lost the game!\"));\n        }\n    }, [\n        selectedIndex,\n        tiles,\n        isWin,\n        playerColor\n    ]);\n    //Emitting socket.io event after every valid input && pass new Color\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(function() {\n        console.log(boardColor);\n        var prevColor;\n        if (playerColor === \"red\") {\n            prevColor = \"blue\";\n        } else {\n            prevColor = \"red\";\n        }\n        _Socket__WEBPACK_IMPORTED_MODULE_2__[\"default\"].emit(\"play\", tiles, boardColor, prevColor);\n    }, [\n        turn\n    ]);\n    //This function will be invoked whenever a tile is clicked\n    var selectTile = function(key, divEvent) {\n        // This function will read the keyboard and input character if it is part of \"PURPLE\"\n        var inputTile = function(keyPressEvent) {\n            var inputChar;\n            if (AVAILABLE_LETTERS.includes(keyPressEvent.key.toUpperCase())) {\n                inputChar = keyPressEvent.key.toUpperCase();\n                setSelectedIndex(key);\n                setTiles((0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tiles.slice(0, key)).concat([\n                    inputChar, \n                ], (0,_swc_helpers_src_to_consumable_array_mjs__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(tiles.slice(key + 1, tiles.length))));\n                setTurn(function(prev) {\n                    return prev + 1;\n                });\n                setSelectedDiv(null);\n                if (playerColor === \"red\") {\n                    setPlayerColor(\"blue\");\n                    setBoardColor((0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, boardColor), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, key, \"red\")));\n                } else {\n                    setPlayerColor(\"red\");\n                    setBoardColor((0,_swc_helpers_src_object_spread_props_mjs__WEBPACK_IMPORTED_MODULE_4__[\"default\"])((0,_swc_helpers_src_object_spread_mjs__WEBPACK_IMPORTED_MODULE_5__[\"default\"])({}, boardColor), (0,_swc_helpers_src_define_property_mjs__WEBPACK_IMPORTED_MODULE_6__[\"default\"])({}, key, \"blue\")));\n                }\n            }\n            window.removeEventListener(\"keypress\", inputTile);\n        };\n        if (selectedDiv !== null) {\n            if (playerColor == \"red\") {\n                selectedDiv.classList.remove(\"bg-red-400\");\n            } else {\n                selectedDiv.classList.remove(\"bg-blue-400\");\n            }\n        }\n        setSelectedDiv(divEvent.target);\n        if (playerColor == \"red\") {\n            divEvent.target.classList.add(\"bg-red-400\");\n        } else {\n            divEvent.target.classList.add(\"bg-blue-400\");\n        }\n        console.log(divEvent.target);\n        if (tiles[key] === \"\") {\n            window.addEventListener(\"keypress\", inputTile);\n        }\n    };\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n        className: \"m-20 sm:p-10 p-8 grid grid-cols-10 gap-2 sm:w-full md:w-3/4 lg:w-1/2 sm:h-4/5 h-3/4 bg-neutral-800 rounded \",\n        children: tiles.map(function(value, key) {\n            return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                ref: refs.current[key],\n                className: \"text-stone-50 text-4xl font-bold font-mono rounded sm:w-14 sm:h-14 w-12 h-12 border-4 border-purple-600 hover:border-green-100 flex justify-center items-center \",\n                onClick: function(event) {\n                    return selectTile(key, event);\n                },\n                children: value\n            }, key, false, {\n                fileName: \"C:\\\\Users\\\\ecuoj\\\\Desktop\\\\Program\\\\PROJECTS\\\\purple-game\\\\purple-game\\\\client\\\\components\\\\PlayScreen.tsx\",\n                lineNumber: 557,\n                columnNumber: 5\n            }, _this1);\n        })\n    }, void 0, false, {\n        fileName: \"C:\\\\Users\\\\ecuoj\\\\Desktop\\\\Program\\\\PROJECTS\\\\purple-game\\\\purple-game\\\\client\\\\components\\\\PlayScreen.tsx\",\n        lineNumber: 555,\n        columnNumber: 3\n    }, _this);\n};\n_s(PlayScreen, \"iEUlw9QNaRdpk7guVhwQgBK21Ms=\");\n_c = PlayScreen;\n/* harmony default export */ __webpack_exports__[\"default\"] = (PlayScreen);\nvar _c;\n$RefreshReg$(_c, \"PlayScreen\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./components/PlayScreen.tsx\n"));

/***/ })

});